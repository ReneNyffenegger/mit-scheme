#!/bin/sh

# $Id: make-dist-files,v 1.19 2001/04/10 19:31:13 cph Exp $
#
# Copyright (c) 2000-2001 Massachusetts Institute of Technology
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA.

set -e

if [ $# -gt 3 ]; then
    echo "usage: ${0} [TYPE [VERSION [DESTINATION]]]"
    exit 1
fi

TYPE="${1:-std}"
VERSION="${2}"
DESTINATION="${3}"

case "${TYPE}" in
6001|all|std|scmutils)
  ;;
*)
  echo "Unknown distribution type: ${TYPE}"
  exit 1
  ;;
esac

DIST_DIR="/scheme/v7/dist"

. "${DIST_DIR}/release-prefix"

TL_DIR="$(pwd)"
BUILD_DIR_REL="$(get_release_prefix "${VERSION}")"
BUILD_DIR="${TL_DIR}/${BUILD_DIR_REL}"
SRC_FILE="${BUILD_DIR}-src.tar.gz"
STAMP_BUILD="${TL_DIR}/stamp-build"
STAMP_IMAGE="${TL_DIR}/stamp-image"

IMAGE_DIR="${BUILD_DIR}-image"
BINDIR="${IMAGE_DIR}/usr/local/bin"
AUXDIR="${IMAGE_DIR}/usr/local/lib/mit-scheme"

MECH_SOURCE="/sw/scmutils"
MECH_BUILD="${BUILD_DIR}/scmutils"
MECH_IMAGE="${IMAGE_DIR}/usr/local/scmutils"
STAMP_BUILD_MECH="${TL_DIR}/stamp-build-mech"
STAMP_IMAGE_MECH="${TL_DIR}/stamp-image-mech"

if [ ! -f "${SRC_FILE}" ]; then
    echo "No source file: ${SRC_FILE}."
    exit 1
fi

MKINSTALLDIRS="/scheme/v7/src/mkinstalldirs"
INSTALL="install -p"
INSTALL_DATA="${INSTALL} -m 644"

# It takes a lot of work to build the image.
# Don't throw it away needlessly.

if [ ! -f "${STAMP_BUILD}" ];then
    rm -rf "${BUILD_DIR}"

    tar xzf "${SRC_FILE}"

    cd "${BUILD_DIR}/src"
    ./configure --enable-static-libs=yes --enable-dynamic-crypto=no \
	--with-mcrypt=no
    make

    cd "${BUILD_DIR}/doc"
    ./configure
    make

    touch "${STAMP_BUILD}"
fi

if [ ! -f "${STAMP_IMAGE}" ]; then
    rm -rf ${IMAGE_DIR}

    cd "${BUILD_DIR}/src"
    make install DESTDIR="${IMAGE_DIR}"
    ${MKINSTALLDIRS} "${AUXDIR}/doc/."
    ${INSTALL_DATA} COPYING "${AUXDIR}/doc/."

    cd "${BUILD_DIR}/doc"
    make install-info-gz DESTDIR="${IMAGE_DIR}" \
	infodir=/usr/local/lib/mit-scheme/edwin/info
    make install-html DESTDIR="${IMAGE_DIR}"

    if [ -d /usr/local/info ]; then
	${INSTALL_DATA} /usr/local/info/dir "${AUXDIR}/edwin/info/."
	${INSTALL_DATA} /usr/local/info/r4rs.* "${AUXDIR}/edwin/info/."
	${INSTALL_DATA} /usr/local/info/r5rs.* "${AUXDIR}/edwin/info/."
    fi

    ALL_BANDS="runtime.com compiler.com edwin.com all.com 6001.com"
    case ${TYPE} in
    std)
	for BAND in ${ALL_BANDS}; do
	    case "${BAND}" in
	    "runtime.com"|"all.com")
		;;
	    *)
		rm -f "${AUXDIR}/${BAND}"
		;;
	    esac
	done
	;;
    all)
	;;
    6001)
	for BAND in ${ALL_BANDS}; do
	    case "${BAND}" in
	    "6001.com")
		;;
	    *)
		rm -f "${AUXDIR}/${BAND}"
		;;
	    esac
	done
	;;
    scmutils)
	for BAND in ${ALL_BANDS}; do
	    rm -f "${AUXDIR}/${BAND}"
	done
	;;
    esac

    find "${IMAGE_DIR}" -type f -print | xargs chmod og-w
    find "${IMAGE_DIR}" -type d -print | xargs chmod og-w

    touch "${STAMP_IMAGE}"
fi

if  [ "${TYPE}" = "scmutils" ] && [ ! -f "${STAMP_BUILD_MECH}" ];then
    rm -rf "${MECH_BUILD}"
    cpx -qsE "${MECH_SOURCE}/src" "${MECH_BUILD}"
    (
	cd "${MECH_BUILD}"
	"${BUILD_DIR}/src/microcode/scheme" \
	    -library "${BUILD_DIR}/src/lib" -compiler -heap 4000 <<EOF
(load "compile")
EOF
	"${BUILD_DIR}/src/microcode/scheme" \
	    -library "${BUILD_DIR}/src/lib" -edwin -compiler -heap 4000 \
	    <<EOF
(load "load")
(disk-save "edwin-mechanics.com")
EOF
    )
    (cd "${MECH_BUILD}/c-utils"; make)

    touch "${STAMP_BUILD_MECH}"
fi

if [ "${TYPE}" = "scmutils" ] && [ ! -f "${STAMP_IMAGE_MECH}" ]; then
    rm -f "${BINDIR}/edwin"
    rm -f "${BINDIR}/mechanics"
    rm -f "${AUXDIR}/edwin-mechanics.com"
    ${INSTALL} "${MECH_SOURCE}/dist/edwin" "${BINDIR}/."
    ${INSTALL} "${MECH_SOURCE}/dist/mechanics" "${BINDIR}/."
    ${INSTALL_DATA} "${MECH_BUILD}/edwin-mechanics.com" "${AUXDIR}/."

    rm -rf "${MECH_IMAGE}"
    ${MKINSTALLDIRS} "${MECH_IMAGE}"

    for DIR in $(cd "${MECH_SOURCE}";find src -type d -print); do
	${MKINSTALLDIRS} "${MECH_IMAGE}/${DIR}"
	for FILE in ${MECH_SOURCE}/${DIR}/*.doc; do
	    [ -f "${FILE}" ] \
		&& ${INSTALL_DATA} "${FILE}" "${MECH_IMAGE}/${DIR}/."
	done
	for SUFFIX in scm c; do
	    for FILE in ${MECH_SOURCE}/${DIR}/*.${SUFFIX}; do
		if [ -f "${FILE}" ]; then
		    TFILE="${MECH_IMAGE}/${DIR}/$(basename "${FILE}")"
		    rm -f "${TFILE}"
		    cat "${DIST_DIR}/copyright.${SUFFIX}" "${FILE}" \
			> "${TFILE}"
		    chtime "${FILE}" "${TFILE}"
		fi
	    done
	done
    done
    ${INSTALL_DATA} "${MECH_SOURCE}/src/copyrigh" "${MECH_IMAGE}/src/LICENSE"
    ${INSTALL_DATA} "/scheme/v7/src/COPYING" "${MECH_IMAGE}/src/."
    ${INSTALL_DATA} "${MECH_SOURCE}/src/general/binio/transcript" \
	"${MECH_IMAGE}/src/general/binio/."
    (
	cd "${MECH_SOURCE}/src/c-utils"
	for FILE in Makefile standard-map-ic.*;do
	    [ -f "${FILE}" ] \
		&& ${INSTALL_DATA} "${FILE}" "${MECH_IMAGE}/src/c-utils/."
	done
    )

    for DIR in $(cd ${MECH_BUILD};find * -type d -print); do
	${MKINSTALLDIRS} "${MECH_IMAGE}/linux/${DIR}"
	for FILE in ${MECH_BUILD}/${DIR}/*.bci; do
	    [ -f "${FILE}" ] \
		&& ${INSTALL_DATA} "${FILE}" "${MECH_IMAGE}/linux/${DIR}/."
	done
    done

    for FILE in psraster texfigure texfigure-big xplot; do
	${INSTALL_DATA} "${MECH_BUILD}/c-utils/${FILE}" \
	    "${MECH_IMAGE}/linux/c-utils/."
    done
    for FILE in standard-map-ic.ps standard-map-ic.tex; do
	${INSTALL_DATA} "${MECH_SOURCE}/src/c-utils/${FILE}" \
	    "${MECH_IMAGE}/linux/c-utils/."
    done

    ${MKINSTALLDIRS} "${MECH_IMAGE}/manual"
    for FILE in beginner.txt graphing.txt refman.txt; do
	${INSTALL_DATA} "${MECH_SOURCE}/manual/${FILE}" \
	    "${MECH_IMAGE}/manual/."
    done

    for FILE in $(cat "${MECH_SOURCE}/dist/dist-exclude"); do
	rm -rf "${MECH_IMAGE}/${FILE}"
    done

    find ${IMAGE_DIR} -type f -print | xargs chmod og-w
    find ${IMAGE_DIR} -type d -print | xargs chmod og-w

    touch "${STAMP_IMAGE_MECH}"
fi

if [ "${TYPE}" != "scmutils" ]; then

    make_tarfile ()
    {
	TARFILE="${TL_DIR}/${1}.tar.gz"
	[ -e "${TARFILE}" ] && rm -f "${TARFILE}"
	(cd ${IMAGE_DIR}/usr/local; tar cvzf "${TARFILE}" *)
	chmod 444 "${TARFILE}"
    }

    if [ "${DESTINATION}" = "" ]; then
      PRE="${BUILD_DIR_REL}-ix86"
      make_tarfile "${PRE}-gnu-linux"
      ${INSTALL} ${DIST_DIR}/freebsd-bin/* "${BINDIR}/."
      make_tarfile "${PRE}-freebsd"
    else
      make_tarfile "${DESTINATION}"
    fi

    rm -rf "${STAMP_IMAGE}" "${IMAGE_DIR}"

    make_doc_file ()
    {
	DOCFILE="${BUILD_DIR}-${2}.${3}"
	rm -f "${DOCFILE}"
	(cd "${TL_DIR}"; ${1} "${DOCFILE}" "${BUILD_DIR_REL}/${2}")
	chmod a-w "${DOCFILE}"
    }

    for TYPE in html info pdf ps; do
	IMAGE_ROOT="doc-${TYPE}"
	IMAGE_DIR="${BUILD_DIR}/${IMAGE_ROOT}"
	rm -rf "${IMAGE_DIR}"
	mkdir "${IMAGE_DIR}"
	(
	    cd "${BUILD_DIR}/doc"
	    make "install-${TYPE}" "${TYPE}dir=${IMAGE_DIR}"
	)
	make_doc_file "tar cvzf" "${IMAGE_ROOT}" "tar.gz"
	make_doc_file "zip -r" "${IMAGE_ROOT}" "zip"
	case "${TYPE}" in
	html | pdf)
	    rm -rf "${TL_DIR}/${IMAGE_ROOT}"
	    mv -f "${IMAGE_DIR}" "${TL_DIR}/."
	    ;;
	esac
    done

    rm -rf "${STAMP_BUILD}" "${BUILD_DIR}"
fi

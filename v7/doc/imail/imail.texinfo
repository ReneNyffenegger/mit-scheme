\input texinfo @c -*-texinfo-*-
@iftex
@finalout
@end iftex
@comment $Id: imail.texinfo,v 1.5 2000/07/11 02:50:44 cph Exp $
@comment %**start of header (This is for running Texinfo on a region.)
@setfilename imail.info
@settitle IMAIL User's Manual
@comment %**end of header (This is for running Texinfo on a region.)
@setchapternewpage odd
@syncodeindex vr cp
@syncodeindex fn cp
@syncodeindex ky cp

@ifinfo
This file documents the use of MIT Scheme.

Copyright @copyright{} 2000 Massachusetts Institute of Technology

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled "GNU
Free Documentation License".
@end ifinfo

@titlepage
@title{IMAIL User's Manual}
@subtitle Edition 0.2
@subtitle 10 July 2000
@author by Chris Hanson

@page

@vskip 0pt plus 1filll
Copyright @copyright{} 2000 Massachusetts Institute of Technology

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled "GNU
Free Documentation License".
@end titlepage

@node Top, Introduction, (dir), (dir)

@ifinfo
This Info file is the user's guide for the @sc{imail} email reader, a
part of MIT Scheme.  It describes how to use @sc{imail}, what features
it provides for viewing and editing email, and how to customize its
optional behavior.
@end ifinfo

@menu
* Introduction::                
* Getting Started::             
* Concepts::                    
* Commands::                    
* Variables::                   
* Index::                       
@end menu

@node Introduction, Getting Started, Top, Top
@chapter Introduction

@cindex Internet Message Access Protocol
@cindex @sc{imap}
@cindex @sc{rfc} 2060
@sc{imail} is a program for reading electronic mail.  It uses the
@dfn{Internet Message Access Protocol} (@sc{imap})
(@uref{http://@-www.ietf.org/@-rfc/@-rfc2060.txt, @sc{rfc} 2060}) to
access mail that is stored on a server, from which @sc{imail} fetches
individual messages on demand.  The server may have many different
@dfn{folders} in which messages are stored, arranged in a hierarchical
structure like that of a file system.  Messages are easily moved or
copied from one folder to another.

@cindex Multipurpose Internet Mail Extensions
@cindex @sc{mime}
@cindex @sc{rfc} 2045
@sc{imap} also supports the @dfn{Multipurpose Internet Mail Extensions}
(@sc{mime}) (@uref{http://@-www.ietf.org/@-rfc/@-rfc2045.txt, @sc{rfc}
2045}), which allows the sending and receiving of @dfn{attachments}.
The @sc{imap} protocol supports this by allowing you to fetch some parts
of a mail message while leaving others on the server.  So, for example,
if you receive a message containing a large attachment, it is possible
to view the text of the message without waiting for the attachment to be
fetched from the server; the attachment is fetched only if you want to
view or save it.  If you aren't interested in the attachment, you can
delete the message without ever fetching it from the server.

@cindex Rmail
In addition to these features, @sc{imail} provides a user interface very
similar to that of the Emacs Rmail mail reader (@pxref{Rmail, Rmail,
Rmail, emacs-e20, GNU Emacs Manual}).  @sc{imail} supports most of the
same commands and has most of the same key bindings as Rmail.
@sc{imail} is primarily intended to be an Rmail replacement for people
who wish to read their mail using an @sc{imap} server.  @sc{imail} can
also read and write Rmail files and unix mail (mbox) files, and provides
the ability to copy messages from such a file to an @sc{imap} folder, or
vice versa; this greatly simplifies the transition from Rmail to
@sc{imail} for those of us who have large amounts of mail stored in
files.

@node Getting Started, Concepts, Introduction, Top
@chapter Getting Started

At present, @sc{imail} has only a very simple mechanism for connecting
to an @sc{imap} server: it makes an unencrypted connection to the
server, and logs in with a user name and a password.  In the near
future, we will implement @sc{cram-md5} authentication.  However, we
have no plans to offer encryption for the connection.

Here at MIT, we connect to our server using
@uref{http://@-www.stunnel.org/, stunnel} to provide end-to-end
encryption.  This provides connection security without the need to
integrate the encryption into the client or the server.

To use @sc{imail}, you must create an Edwin init file, called
@file{~/.edwin} on unix machines or @file{edwin.ini} on Windows or OS/2
machines.  This file contains arbitrary Scheme expressions that are
evaluated in the Edwin environment when Edwin is started.  In addition
to any other customizations you put in this file, you must include the
following expression:

@example
(load-option 'imail)
@end example

@noindent
Next, you must tell Edwin where to find your @sc{imap} server, by
setting some variables; the expression to do this must follow the call
to @code{load-option}.  Here is an example:

@example
@group
(load-option 'imail)
(set-variable! imail-default-imap-server "imap.foo.org")
@end group
@end example

@noindent
Note that this is syntactically similar to Scheme's @code{set!} special
form, but that it modifies the value of an Edwin editor variable rather
than a Scheme variable.  There are several other variables that control
how @sc{imail} connects to the server.  @xref{Variables}, for a complete
list.  By default, @sc{imail} tries to connect to @samp{localhost} using
port @code{143}, and to log in using the user name that you are logged
in as.  This is the right default if you are using stunnel on the
client.

After you are finished creating the init file, you can either restart
Edwin, or you can load the file using @kbd{M-x load-file}.  At this
point, you are ready to run @sc{imail}.  To start @sc{imail} and read
the mail in the @samp{inbox} folder on your @sc{imap} server, type
@kbd{M-x imail}.

@node Concepts, Commands, Getting Started, Top
@chapter Concepts

To use @sc{imail} effectively, it is helpful to know the terminology and
understand the concepts underlying @sc{imail}'s design.  Here we will
introduce you to messages, folders, @sc{url}s, and server connections.

@menu
* Messages::                    
* Folders::                     
* URLs::                        
* Server Connections::          
@end menu

@node Messages, Folders, Concepts, Concepts
@section Messages

@cindex message
@cindex email message
@cindex @sc{rfc} 821
@cindex @sc{rfc} 822
@cindex @sc{smtp}
A @dfn{message}, or @dfn{email message}, is the basic unit of electronic
mail.  The format of a message is defined by
@uref{http://@-www.ietf.org/@-rfc/@-rfc0822.txt, @sc{rfc} 822}.  Nearly
all email messages are transmitted over the internet, which means that
the contents of such messages are further constrained by the @sc{smtp}
protocol that is used for internet message transmission, as defined in
@uref{http://@-www.ietf.org/@-rfc/@-rfc0821.txt, @sc{rfc} 821}.

In brief, the primary constraints on an email message is that it may
contain only printable @sc{us-ascii} characters, and that lines of text
in the message may not exceed 1000 characters, @emph{including} the
carriage-return/linefeed pair at the end of each line.

@cindex Multipurpose Internet Mail Extensions
@cindex @sc{mime}
@cindex @sc{rfc} 2045
These constraints are fairly strict, and do not permit messages to
contain text in other languages, or to contain non-textual data such as
images.  The @dfn{Multipurpose Internet Mail Extensions} (@sc{mime})
(@uref{http://@-www.ietf.org/@-rfc/@-rfc2045.txt, @sc{rfc} 2045})
provide a way to encode other kinds of text and data so that they can be
carried in an email message.  Most modern email software supports the
@sc{mime} standard, with some notable exceptions, including particularly
Emacs Rmail.

@node Folders, URLs, Messages, Concepts
@section Folders

@cindex folder
Another important concept is a means for grouping messages together.
All email software provides some means for doing this, and @sc{imail} is
no exception.  @sc{imail} provides objects called @dfn{folders}.  A
folder is just a container that holds an arbitrary number of email
messages.  Messages can be added to a folder, deleted from a folder,
and moved or copied from one folder to another.

@cindex Rmail file
@cindex @sc{babyl} file
@cindex unix mailbox file
@cindex mbox file
@cindex @sc{imap} mailbox
@cindex folder type
@cindex type of folder
In @sc{imail}, the concept of the folder is used to embrace different
grouping mechanisms.  This is because @sc{imail} provides a uniform
means for accessing different kinds of email systems.  In particular,
@sc{imail} supports access to Emacs Rmail files (also known as
@sc{babyl} files, for historical reasons), to unix mailbox files
(sometimes called @dfn{mbox} files), and to @sc{imap} mailboxes.  Each
of these grouping mechanisms, although implemented very differently, is
viewed as a folder by @sc{imail}.  With some exceptions, each of these
different @dfn{types} of folder are treated exactly the same by
@sc{imail}.  Finally, because @sc{imail} is extensible, other types of
folders may be supported in the future.

@node URLs, Server Connections, Folders, Concepts
@section URLs

@cindex Uniform Resource Locator
@cindex @sc{url}
@cindex @sc{rfc} 1738
@cindex @sc{rfc} 2396
In email software like Rmail, where mail is stored in files, filenames
are used to refer to groups of messages.  Since @sc{imail} folders often
aren't files, it is necessary to use a more general kind of reference
for folders.  To this end, @sc{imail} uses @dfn{Uniform Resource
Locators} (@sc{url}s) to refer to folders.@footnote{@sc{url}s are
defined in @uref{http://@-www.ietf.org/@-rfc/@-rfc1738.txt, @sc{rfc}
1738} and @uref{http://@-www.ietf.org/@-rfc/@-rfc2396.txt, @sc{rfc}
2396}.} @sc{imail} currently supports two kinds of @sc{url}s: @sc{imap}
@sc{url}s and file @sc{url}s.

@menu
* IMAP URLs::                   
* File URLs::                   
@end menu

@node IMAP URLs, File URLs, URLs, URLs
@subsection IMAP URLs

@cindex @sc{imap} @sc{url}
@cindex @sc{url}, @sc{imap}
The first kind of @sc{url} is an @sc{imap} @sc{url},@footnote{The syntax
for @sc{imap} @sc{url}s is defined by
@uref{http://@-www.ietf.org/@-rfc/@-rfc2192.txt, @sc{rfc} 2192}, except
that @sc{imail} uses only a subset of the defined syntax.} which looks
like this:

@example
imap://@var{uname}@@@var{hostname}:@var{port}/@var{mailbox}
@end example

@noindent
In this syntax, the parts @samp{@var{uname}@@} and @samp{:@var{port}}
are optional.  @var{Hostname} is the internet host name or @sc{ip}
address of the @sc{imap} server.  @var{Uname} is the user name that
identifies the account to be accessed on the server; this defaults to
your user name.  @var{Port} is the server's @sc{ip} port; this defaults
to @code{143} and is normally not specified.

@cindex hierarchical mailbox
@var{Mailbox} specifies the @sc{imap} mailbox (or folder, in
@sc{imail}'s terminology) that is being referred to.  Since most
@sc{imap} servers support hierarchical mailboxes, @var{mailbox} is a
structured component indicating the location of the folder in the
hierarchy, much like filenames or @sc{http} @sc{url}s.  Here are some
examples of @sc{imap} @sc{url}s showing different mailbox paths:

@example
imap://localhost/inbox
imap://localhost/inbox/sysadmin
imap://localhost/inbox/sysadmin/equipment
@end example

@noindent
@cindex inbox
@cindex primary @sc{imap} mailbox
Here you see several interesting properties of @sc{imap} mailboxes.  The
first @sc{url} refers to the primary @sc{imap} mailbox for this account,
called the @dfn{inbox}.  All @sc{imap} servers must support this
mailbox, which is always called @samp{inbox}; the name is not case
sensitive and may be typed in any combination of upper or lower case
letters.  However, case sensitivity for names other than @samp{inbox} is
undefined by @sc{imap}, so @sc{imail} treats all other names as if they
were case sensitive.

@cindex heirarchical @sc{imap} mailbox
The second and third @sc{url}s show how hierarchically-nested mailboxes
are referred to: by writing the components of the path, separated by
slashes.  Note that @sc{imap} does not require particular path-separator
characters for hierarchical names, and in fact different @sc{imap}
servers use different separators.  However, @sc{imail} @emph{always}
uses the forward-slash character as a separator, and translates to the
server's character as needed.@footnote{This is in opposition to
@uref{http://@-www.ietf.org/@-rfc/@-rfc2192.txt, @sc{rfc} 2192}, which
specifies use of the server-specific separator.
@uref{http://@-www.ietf.org/@-rfc/@-rfc2396.txt, @sc{rfc} 2396} and
@uref{http://@-www.ietf.org/@-rfc/@-rfc2718.txt, @sc{rfc} 2718} provide
compelling arguments against this design.}

@cindex Cyrus
Another thing to note about these examples is that @sc{imap}, unlike
most file systems, allows a folder to contain messages @emph{and} to
have subfolders.  This includes the @samp{inbox} folder, as shown here.
At least one server (@uref{http://@-asg.web.cmu.edu/cyrus/, Cyrus}) puts
@emph{all} subfolders for a user account under @samp{inbox}, but this is
not required by @sc{imap} and is not generally true.

@node File URLs,  , IMAP URLs, URLs
@subsection File URLs

There are two other @sc{url} types supported by @sc{imail}: Rmail
@sc{url}s and unix mailbox @sc{url}s.  Both of these use the same
syntax, which is exactly the same as the @samp{file:} @sc{url}
syntax,@footnote{File @sc{url}s are defined in
@uref{http://@-www.ietf.org/@-rfc/@-rfc1738.txt, @sc{rfc} 1738}.} as
follows:

@example
@group
rmail://@var{hostname}/@var{pathname}
umail://@var{hostname}/@var{pathname}
@end group
@end example

@noindent
Here @var{hostname} refers to the host on which the file (folder)
resides.  Since @sc{imail} supports only files on the local file system,
@var{hostname} must be @samp{localhost}; it may also be omitted, as in

@example
rmail:///@var{pathname}
@end example

@noindent
@sc{imail} also supports a non-standard abbreviation:

@example
rmail:/@var{pathname}
@end example

The prefixes @samp{rmail:} and @samp{umail:} specify the type of file
folder being referred to, respectively an Rmail file or a unix mailbox
file.  (In the future, this design may be changed to use the
@samp{file:} prefix for both types, and determine the file's type from
its content.)

As specified by the @sc{url} standard, @var{pathname} is a
slash-separated sequence of path components, where unusual characters
appearing in the components, such as the space character, are specially
encoded.  However, @sc{imail} will accept nearly any character in a
component, and encode it if required; with few exceptions you can type
any pathname without encoding.  @sc{imail} always displays @sc{url}s
with proper encoding.

In practice, this means that most unix filenames are written verbatim,
with exceptions for special characters, and with the leading slash
omitted.  However, @sc{dos}-style filenames, as used by Windows and
OS/2, must be specially rewritten to conform to this style.

The rewriting rules for @sc{dos} file @sc{url}s are not specified by the
standard, so consequently @sc{imail} defines its own rules for this
encoding, as follows.  A @sc{dos} filename is encoded by replacing all
of the backslash characters with forward-slash characters, and by
encoding unusual characters in the path components.  Finally, the drive
letter is prefixed to the path with an additional forward-slash
separator.  So for, example, the filename

@example
C:\My Documents\Mail\My Mail.rmail
@end example

@noindent
becomes the @sc{url}

@example
rmail://localhost/C:/My%20Documents/Mail/My%20Mail.rmail
@end example

@ifset dontsetme
@itemize @bullet
@item
@sc{mime} entity

@item
@sc{imap} extensions: @sc{uidplus}, @sc{namespace}

@item
differences between Rmail and @sc{imail}: narrowed buffer versus
individual messages; no editing commands, flags vs. labels.
@end itemize
@end ifset

@node Server Connections,  , URLs, Concepts
@section Server Connections

@cindex connection state
Unlike a file folder, in which the folder's contents are always
available, access to an @sc{imap} folder requires an active network
connection to the @sc{imap} server.  This adds an additional layer of
complexity to the mail-reading process, which is reflected in the
@dfn{connection state} of an @sc{imap} folder.

@cindex online state
@cindex offline state
@cindex online mode
@cindex offline mode
@cindex disconnected mode
An @sc{imap} folder can be in one of two states: @dfn{online}, meaning
that there is an established network connection between @sc{imail} and
the @sc{imap} server, and @dfn{offline} when there is not.  @sc{imail}
is, at present, a very simple @sc{imap} mail reader: it must be online
to read and manipulate mail messages.  Mail readers that have this
property are said to operate in @dfn{online mode}.@footnote{@sc{imap}
also supports two other modes of operation, called @dfn{offline mode}
and @dfn{disconnected mode}; at present @sc{imail} can not operate in
these alternate modes.} Do not confuse the online @emph{state} with
online @emph{mode}.  When we refer to online or offline in this
document, it always means the corresponding @emph{state}.

When an @sc{imap} folder is selected in an @sc{imail} buffer, the
modeline for that buffer shows either @samp{online} or @samp{offline} to
indicate the folder's connection state.  Normally, an @sc{imap} folder
goes online when it is first selected, and stays online indefinitely
until it is explicitly disconnected.@footnote{Although @sc{imap} servers
are allowed to disconnect mail readers that are inactive for long
periods of time, @sc{imail} silently keeps the connection open by
periodically transmitting commands to the server.} Commands that break
the connection are explicitly pointed out in their descriptions below;
most other commands will force an @sc{imap} folder into the online state
if it is offline.

@node Commands, Variables, Concepts, Top
@chapter Commands

@sc{imail} provides a rich set of commands for manipulating messages.
Like Rmail, most of these commands are bound to letter keys.

The most important command is @kbd{M-x imail}, which is used to start
@sc{imail}.  With no arguments, @kbd{M-x imail} reads the primary
folder, selects the first unseen message in the folder, then selects the
folder's buffer.  If the primary folder is an @sc{imap} folder, @kbd{M-x
imail} will connect to the server and check for new mail.  If @kbd{M-x
imail} is given a prefix argument, it will prompt for the @sc{url} of a
folder rather than reading the primary folder.

The buffer that shows a message in an @sc{imail} folder is put in
@code{IMAIL} mode, which is a special mode in which most letter commands
are defined to have special meanings.  Where possible, the letters
chosen for these commands are the same as those for the corresponding
Rmail commands.  The command keys specified in this chapter are for
@code{IMAIL} mode, unless otherwise specified.

@menu
* Navigation::                  
* Deleting Messages::           
* Multiple Folders::            
* Copying Messages::            
* MIME Support::                
* Flags::                       
* Sending Replies::             
* Summaries::                   
* Other Commands::              
* Differences between IMAIL and Rmail::  
@end menu

@node Navigation, Deleting Messages, Commands, Commands
@section Navigation

@example
imail-first-message
imail-first-unseen-message
imail-last-message
imail-next-message
imail-next-same-subject
imail-next-undeleted-message
imail-previous-message
imail-previous-same-subject
imail-previous-undeleted-message
imail-select-message
@end example

@node Deleting Messages, Multiple Folders, Navigation, Commands
@section Deleting Messages

@example
imail-delete-backward
imail-delete-forward
imail-delete-message
imail-expunge
imail-undelete-backward
imail-undelete-forward
imail-undelete-previous-message
@end example

@node Multiple Folders, Copying Messages, Deleting Messages, Commands
@section Multiple Folders

@example
imail-create-folder
imail-delete-folder
imail-input
imail-rename-folder
@end example

@node Copying Messages, MIME Support, Multiple Folders, Commands
@section Copying Messages

@example
imail-copy-folder
imail-input-from-folder
imail-output
@end example

@node MIME Support, Flags, Copying Messages, Commands
@section MIME Support

@example
imail-mouse-save-mime-entity
imail-save-attachment
imail-save-mime-entity
imail-toggle-mime-entity
@end example

@node Flags, Sending Replies, MIME Support, Commands
@section Flags

@example
imail-add-flag
imail-kill-flag
imail-next-flagged-message
imail-previous-flagged-message
@end example

@node Sending Replies, Summaries, Flags, Commands
@section Sending Replies

@example
imail-continue
imail-forward
imail-mail
imail-reply
imail-resend
@end example

@node Summaries, Other Commands, Sending Replies, Commands
@section Summaries

@node Other Commands, Differences between IMAIL and Rmail, Summaries, Commands
@section Other Commands

@example
imail-bury
imail-disconnect
imail-get-new-mail
imail-quit
imail-save-folder
imail-search
imail-toggle-header
imail-toggle-message
@end example

@node Differences between IMAIL and Rmail,  , Other Commands, Commands
@section Differences between IMAIL and Rmail

@node Variables, Index, Commands, Top
@chapter Variables

@node Index,  , Variables, Top
@unnumbered Index

@printindex cp

@contents
@bye

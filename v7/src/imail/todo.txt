IMAIL To-Do List
$Id: todo.txt,v 1.44 2000/05/23 14:13:44 cph Exp $

Bug fixes
---------

* APPEND-MESSAGE not doing autocreate because TRYCREATE appears in
  response to continuation request.

* M-x imail-copy-messages re-reads the target folder UIDs for each
  message that is written, when the target folder is not being
  visited.

* M-x imail-copy-messages appears to rewrite an RMAIL file that is the
  source of the copy.

* Implement operations for IMAP: URL-EXISTS?.

* Must be able to handle malformed headers in incoming mail.
  Generating a low-level error in this situation is unacceptable.

* RMAIL file reader must recognize when the tail of the file contains
  umail messages.

Design changes
--------------

* Move pathname-completion code into the runtime system.

* Rename the procedures that form the UI callback interface to make it
  clear what their role is.

* Repackage the code so that each file now in the core is in a
  separate package.

* Reimplement UID synchronization.  Take advantage of monotonic UID
  numbers to discover largest prefix range that hasn't changed.
  Binary search can be used which should produce excellent results on
  large folders.  UID FETCH command should be useful for this.

* Try to leverage IMAP MIME parser by building compatible
  interface for file-based folders.

* Change file URLs to follow specification in RFC1738, which requires
  the use of forward slashes and encoding.  Take advantage of relative
  URLs as specified in RFC1808.  Maybe change URL representation to
  have a heirarchical path structure so that we can write MERGE-URLS.

New features
------------

* M-x imail-copy-messages needs prompt that distinguishes itself from
  M-x imail-output.  Both of these commands should provide feedback
  for each message that is output, and should announce the total
  number of messages output when finished.

* Optionally convert quoted-printable messages to 8bit for presentation.

* Optionally wrap long lines for presentation.

* Add command to rename folders.  Add command to append all of the
  messages from one folder to another.

* Add mail notification in mode line, active across the editor as long
  as there is an IMAP connection open in some buffer.

* Implement background thread to periodically send NOOP to IMAP server
  both to check for new mail and to keep the connection alive.

* Implement cache that saves information about messages on disk.  This
  should use UIDs for IMAP folders; for other folders perhaps the
  message ID can be used.  (Or perhaps no cache is required for
  non-IMAP folders.)

* Password memoization should be controllable from the editor.

* Implement file backup when writing file folders.

* Write folder browser for IMAP servers.  Implement
  AVAILABLE-FOLDER-NAMES.

* Generate file I/O messages when reading and writing file folders.
  Generate message "No changes to save." from SAVE-FOLDER on an IMAP
  folder.

* IMAIL must support I/O to compressed files (for my sake if no one
  else).  A clean solution to this requires moving compressed-file
  support to the runtime system.

* Implement something closer to the IMAP COPY operation, e.g.
  APPEND-MESSAGES.

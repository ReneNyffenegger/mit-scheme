# $Id: Makefile.in,v 1.40 2007/06/06 19:42:38 cph Exp $
#
# Copyright (C) 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
#     1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
#     2005, 2006, 2007 Massachusetts Institute of Technology
#
# This file is part of MIT/GNU Scheme.
#
# MIT/GNU Scheme is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# MIT/GNU Scheme is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with MIT/GNU Scheme; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301, USA.

# **** BEGIN BOILERPLATE ****

SHELL = @SHELL@

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datarootdir = @datarootdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =
top_builddir = @top_builddir@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

LN_S = @LN_S@
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs

# **** END BOILERPLATE ****

SUBDIRS_1 = cref sf star-parser
SUBDIRS_2 = edwin imail sos ssp xml

SUBDIRS = $(INSTALLED_SUBDIRS) 6001 compiler rcs win32 xdoc
INSTALLED_SUBDIRS = microcode runtime $(SUBDIRS_1) $(SUBDIRS_2)

LIARC_BOOT_BUNDLES = $(SUBDIRS_1) compiler
LIARC_INSTALLED_BUNDLES = $(SUBDIRS_1) $(SUBDIRS_2)
LIARC_BUNDLES = $(LIARC_INSTALLED_BUNDLES) compiler

AUXDIR = @AUXDIR@
EDETC = $(AUXDIR)/edwin/etc

all: compile-microcode @ALL_TARGET@ build-bands

compile-microcode:
	(cd microcode && $(MAKE) all)

build-bands:
	@$(top_srcdir)/etc/build-bands.sh

all-native:
	@$(top_srcdir)/etc/compile.sh


liarc-dist: liarc-stamp distclean

liarc-stamp:
	@$(top_srcdir)/etc/compile-boot-compiler.sh mit-scheme
	@$(top_srcdir)/etc/c-prepare.sh mit-scheme
	echo "done" > liarc.stamp

all-liarc: liarc-compile-scheme
	$(MAKE) compile-microcode
	$(MAKE) compile-liarc-bundles
	rm -rf boot-lib

liarc-compile-scheme: boot-lib/liarc-compiler.com c-clean
	@$(top_srcdir)/etc/c-compile.sh boot-lib/scheme --library boot-lib \
	    --band boot-lib/liarc-compiler.com

boot-lib/liarc-compiler.com: boot-lib/scheme compile-liarc-boot-bundles
	$(INSTALL_PROGRAM) microcode/liarc-cc boot-lib/.
	$(INSTALL_PROGRAM) microcode/liarc-ld boot-lib/.
	$(mkinstalldirs) boot-lib/include
	$(INSTALL_DATA) microcode/*.h boot-lib/include/.
	@for BN in $(LIARC_BOOT_BUNDLES); do \
	    CMD="$(INSTALL_DATA) $${BN}/$${BN}.so boot-lib/lib/.";\
	    echo "$${CMD}"; eval "$${CMD}";\
	done
	@$(top_srcdir)/etc/build-boot-compiler.sh boot-lib liarc-compiler.com

boot-lib/scheme: compile-microcode
	$(mkinstalldirs) boot-lib boot-lib/lib
	$(INSTALL_DATA) $(top_srcdir)/etc/optiondb.scm boot-lib/.
	$(INSTALL_PROGRAM) microcode/scheme boot-lib/.
	$(INSTALL_PROGRAM) microcode/gen-nonce boot-lib/.
	$(INSTALL_DATA) microcode/*.so boot-lib/lib/.
	rm -f boot-lib/star-parser; ln -s ../star-parser boot-lib/.
	rm -f boot-lib/options; ln -s ../runtime boot-lib/options

compile-liarc-boot-bundles:
	@for BN in $(LIARC_BOOT_BUNDLES); do \
	    CMD="(cd $${BN} && $(MAKE) compile-liarc-bundle)";\
	    echo "$${CMD}"; eval "$${CMD}";\
	done

compile-liarc-bundles:
	@for BN in $(LIARC_BUNDLES); do \
	    CMD="(cd $${BN} && $(MAKE) compile-liarc-bundle)";\
	    echo "$${CMD}"; eval "$${CMD}";\
	done

install-liarc-bundles:
	@for BN in $(LIARC_INSTALLED_BUNDLES); do \
	    CMD="(cd $${BN} && $(MAKE) install-liarc-bundle)";\
	    echo "$${CMD}"; eval "$${CMD}";\
	done

native-from-liarc: boot-lib/native-compiler.com clean
	$(MAKE) compile-microcode
	@$(top_srcdir)/etc/compile.sh boot-lib/scheme --library boot-lib \
	    --band boot-lib/native-compiler.com
	rm -rf boot-lib

boot-lib/native-compiler.com: boot-lib/scheme native-prepare
	@$(top_srcdir)/etc/build-boot-compiler.sh boot-lib native-compiler.com

native-prepare:
	@$(top_srcdir)/etc/compile-boot-compiler.sh mit-scheme-c
	(cd compiler && $(MAKE) compile-liarc-bundle)
	@$(top_srcdir)/etc/native-prepare.sh mit-scheme-c



mostlyclean clean distclean maintainer-clean c-clean:
	$(top_srcdir)/Clean.sh $@ $(SUBDIRS)

tags TAGS:
	$(top_srcdir)/Tags.sh $(SUBDIRS)

install: install-standard @INSTALL_LIARC_BUNDLES@

install-standard:
	@for SUBDIR in $(INSTALLED_SUBDIRS); do \
	    echo "Making $@ in $${SUBDIR}";\
	    (cd $${SUBDIR}; $(MAKE) install) || exit 1;\
	done

	$(mkinstalldirs) $(DESTDIR)$(AUXDIR)
	$(INSTALL_DATA) $(top_srcdir)/etc/optiondb.scm $(DESTDIR)$(AUXDIR)/.
	$(INSTALL_DATA) lib/*.com $(DESTDIR)$(AUXDIR)/.

	$(mkinstalldirs) $(DESTDIR)$(EDETC)
	$(INSTALL_DATA) $(top_srcdir)/etc/TUTORIAL $(DESTDIR)$(EDETC)/.

.PHONY: all compile-microcode build-bands all-native
.PHONY: liarc-dist all-c liarc-compile-scheme compile-liarc-boot-bundles
.PHONY: compile-liarc-bundles native
.PHONY: mostlyclean clean distclean maintainer-clean c-clean
.PHONY: tags TAGS install install-standard

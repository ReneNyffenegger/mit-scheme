###
### $Id: makefile.wcc,v 1.1 1997/05/13 05:32:30 cph Exp $
###
### Copyright (c) 1993-97 Massachusetts Institute of Technology
###
### This material was developed by the Scheme project at the Massachusetts
### Institute of Technology, Department of Electrical Engineering and
### Computer Science.  Permission to copy this software, to redistribute
### it, and to use it for any purpose is granted, subject to the following
### restrictions and understandings.
### 
### 1. Any copy made of this software must include this copyright notice
### in full.
### 
### 2. Users of this software agree to make their best efforts (a) to
### return to the MIT Scheme project any improvements or extensions that
### they make, so that these may be included in future releases; and (b)
### to inform MIT of noteworthy uses of this software.
### 
### 3. All materials developed as a consequence of the use of this
### software shall duly acknowledge such use, in accordance with the usual
### standards of acknowledging credit in academic research.
### 
### 4. MIT has made no warrantee or representation that the operation of
### this software will be error-free, and MIT is under no obligation to
### provide any services, by way of maintenance, update, or otherwise.
### 
### 5. In conjunction with products arising from the use of this material,
### there shall be no use of the name of the Massachusetts Institute of
### Technology nor of any adaptation thereof in any advertising,
### promotional, or sales literature without prior written consent from
### MIT in each case. */
### 

CC = wcc386

# Compiler options.
# [DEBUG] marks options used for debugging.
# [OPTIMIZE] marks options used for optimization.
#
# /4r		386 instructions, 486 timings, register-based args
# /bd		build NT DLL
# /bt=nt	build NT binary (default when host is NT)
# /d1+		generate debug info [OPTIMIZE]
# /d2		generate debug info [DEBUG]
# /ei		generate enum `int'-sized (required for MS compatibility)
# /fpi		generate in-line 387 insns, emulate if none (default)
# /fp3		generate in-line 387 insns (default)
# /hw		generate Watcom debug info (default)
# /mf		use flat memory model (default)
# /od		disable optimization (default with /d2)
# /oe		enable in-line user-code expansion [OPTIMIZE]
# /op		force IEEE floating-point semantics
# /ox		enable various optimizations [OPTIMIZE]
# /s		remove stack overflow checks
# /w0		disable warning messages
# /zc		place literal strings in code segment
# /ze		enable language extensions (default)
# /zp4		use 4-byte alignment (required for MS compatibility)
# /zq		operate quietly
CFLAGS = /4r /d2 /ei /fpi /fp3 /op /s /w1 /zc /zp4 /zq

# Linker options.
#
# debug all		include debug info in executable
# option caseexact	use case-sensitive comparison for identifiers
# option map		create a .map file
# option quiet		operate quietly
# option symfile	put debug info in .sym file
LDFLAGS = debug all option caseexact option map option quiet

# Library Manager options.
#
# /b		Suppress backup file
# /c		case-sensitive comparison
# /n		produce a new output file
# /q		operate quietly
WLIB_FLAGS = /b /c /n /q

WRCFLAGS_SYSTEM = /i=$(%NT_INCLUDE)

all : dibutils.dll

.c.obj :
	$(CC) $(CFLAGS) $[@

dibutils.dll : dibutils.obj dibutils.lnk dibutils.lbc dibutils.res
	wlink $(LDFLAGS) @dibutils.lnk
	wrc /q /ad /bt=nt dibutils.res $^@

dibutils.lib : dibutils.dll
	wlib $(WLIB_FLAGS) $^@ +$[@

dibutils.res : dibutils.rc
	wrc /q /ad /bt=nt /r /x /D__WATCOMC__ $(WRCFLAGS_SYSTEM) $[@

dibutils.obj : dibutils.c dibutils.h

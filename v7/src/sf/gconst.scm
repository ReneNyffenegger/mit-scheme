#| -*-Scheme-*-

$Id: gconst.scm,v 4.38 2008/02/10 04:42:40 cph Exp $

Copyright (C) 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
    1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
    2006, 2007, 2008 Massachusetts Institute of Technology

This file is part of MIT/GNU Scheme.

MIT/GNU Scheme is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

MIT/GNU Scheme is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with MIT/GNU Scheme; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301,
USA.

|#

;;;; SCode Optimizer: Global Constants List
;;; package: (scode-optimizer)

(declare (usual-integrations))

(define global-constant-objects
  '(CHAR-BITS-LIMIT
    CHAR-CODE-LIMIT
    CHAR-INTEGER-LIMIT
    CHAR:NEWLINE
    FALSE
    THE-EMPTY-STREAM
    TRUE
    UNDEFINED-CONDITIONAL-BRANCH
    UNSPECIFIC))

(define global-primitives
  '((%RECORD %RECORD)
    (%RECORD-LENGTH %RECORD-LENGTH)
    (%RECORD-REF %RECORD-REF)
    (%RECORD-SET! %RECORD-SET!)
    (%RECORD? %RECORD?)
    (BIT-STRING-LENGTH BIT-STRING-LENGTH)
    (BIT-STRING? BIT-STRING?)
    (CAR CAR)
    (CDR CDR)
    (CHAR->INTEGER CHAR->INTEGER)
    (CHAR? CHAR?)
    (CONS CONS)
    (EQ? EQ?)
    (FALSE? NOT)
    (FIX:* MULTIPLY-FIXNUM)
    (FIX:+ PLUS-FIXNUM)
    (FIX:- MINUS-FIXNUM)
    (FIX:-1+ MINUS-ONE-PLUS-FIXNUM)
    (FIX:1+ ONE-PLUS-FIXNUM)
    (FIX:< LESS-THAN-FIXNUM?)
    (FIX:= EQUAL-FIXNUM?)
    (FIX:> GREATER-THAN-FIXNUM?)
    (FIX:AND FIXNUM-AND)
    (FIX:ANDC FIXNUM-ANDC)
    (FIX:FIXNUM? FIXNUM?)
    (FIX:GCD GCD-FIXNUM)
    (FIX:LSH FIXNUM-LSH)
    (FIX:NEGATIVE? NEGATIVE-FIXNUM?)
    (FIX:NOT FIXNUM-NOT)
    (FIX:OR FIXNUM-OR)
    (FIX:POSITIVE? POSITIVE-FIXNUM?)
    (FIX:QUOTIENT FIXNUM-QUOTIENT)
    (FIX:REMAINDER FIXNUM-REMAINDER)
    (FIX:XOR FIXNUM-XOR)
    (FIX:ZERO? ZERO-FIXNUM?)
    (FLO:* FLONUM-MULTIPLY)
    (FLO:+ FLONUM-ADD)
    (FLO:- FLONUM-SUBTRACT)
    (FLO:/ FLONUM-DIVIDE)
    (FLO:< FLONUM-LESS?)
    (FLO:= FLONUM-EQUAL?)
    (FLO:> FLONUM-GREATER?)
    (FLO:ABS FLONUM-ABS)
    (FLO:ACOS FLONUM-ACOS)
    (FLO:ASIN FLONUM-ASIN)
    (FLO:ATAN FLONUM-ATAN)
    (FLO:ATAN2 FLONUM-ATAN2)
    (FLO:CEILING FLONUM-CEILING)
    (FLO:COS FLONUM-COS)
    (FLO:EXP FLONUM-EXP)
    (FLO:FLONUM? FLONUM?)
    (FLO:FLOOR FLONUM-FLOOR)
    (FLO:LOG FLONUM-LOG)
    (FLO:NEGATE FLONUM-NEGATE)
    (FLO:NEGATIVE? FLONUM-NEGATIVE?)
    (FLO:POSITIVE? FLONUM-POSITIVE?)
    (FLO:ROUND FLONUM-ROUND)
    (FLO:SIN FLONUM-SIN)
    (FLO:SQRT FLONUM-SQRT)
    (FLO:TAN FLONUM-TAN)
    (FLO:TRUNCATE FLONUM-TRUNCATE)
    (FLO:VECTOR-CONS FLOATING-VECTOR-CONS)
    (FLO:VECTOR-LENGTH FLOATING-VECTOR-LENGTH)
    (FLO:VECTOR-REF FLOATING-VECTOR-REF)
    (FLO:VECTOR-SET! FLOATING-VECTOR-SET!)
    (FLO:ZERO? FLONUM-ZERO?)
    (GET-INTERRUPT-ENABLES GET-INTERRUPT-ENABLES)
    (INDEX-FIXNUM? INDEX-FIXNUM?)
    (INT:* INTEGER-MULTIPLY)
    (INT:+ INTEGER-ADD)
    (INT:- INTEGER-SUBTRACT)
    (INT:-1+ INTEGER-SUBTRACT-1)
    (INT:1+ INTEGER-ADD-1)
    (INT:< INTEGER-LESS?)
    (INT:= INTEGER-EQUAL?)
    (INT:> INTEGER-GREATER?)
    (INT:NEGATIVE? INTEGER-NEGATIVE?)
    (INT:POSITIVE? INTEGER-POSITIVE?)
    (INT:QUOTIENT INTEGER-QUOTIENT)
    (INT:REMAINDER INTEGER-REMAINDER)
    (INT:ZERO? INTEGER-ZERO?)
    (INTEGER->CHAR INTEGER->CHAR)
    (NOT NOT)
    (NULL? NULL?)
    (OBJECT-TYPE OBJECT-TYPE)
    (OBJECT-TYPE? OBJECT-TYPE?)
    (PAIR? PAIR?)
    (SET-CAR! SET-CAR!)
    (SET-CDR! SET-CDR!)
    (SET-STRING-LENGTH! SET-STRING-LENGTH!)
    (STRING-ALLOCATE STRING-ALLOCATE)
    (STRING-LENGTH STRING-LENGTH)
    (STRING-REF STRING-REF)
    (STRING-SET! STRING-SET!)
    (STRING? STRING?)
    (SYSTEM-HUNK3-CXR0 SYSTEM-HUNK3-CXR0)
    (SYSTEM-HUNK3-CXR1 SYSTEM-HUNK3-CXR1)
    (SYSTEM-HUNK3-CXR2 SYSTEM-HUNK3-CXR2)
    (SYSTEM-PAIR-CAR SYSTEM-PAIR-CAR)
    (SYSTEM-PAIR-CDR SYSTEM-PAIR-CDR)
    (SYSTEM-PAIR-CONS SYSTEM-PAIR-CONS)
    (SYSTEM-VECTOR-REF SYSTEM-VECTOR-REF)
    (VECTOR VECTOR)
    (VECTOR-8B-REF VECTOR-8B-REF)
    (VECTOR-8B-SET! VECTOR-8B-SET!)
    (VECTOR-LENGTH VECTOR-LENGTH)
    (VECTOR-REF VECTOR-REF)
    (VECTOR-SET! VECTOR-SET!)
    (VECTOR? VECTOR?)))
;;; -*-Scheme-*-
;;; $Header: /Users/cph/tmp/foo/mit-scheme/mit-scheme/v7/src/edwin/edwin.ldr,v 1.20 1991/11/26 20:10:15 markf Exp $
;;; program to load package contents
;;; **** This program (unlike most .ldr files) is not generated by a program.

(declare (usual-integrations))

(lambda (load key-alist)
  key-alist
  (let ((environment (->environment '(EDWIN))))
    (load "utils" environment)
    (load "nvector" environment)
    (load "ring" environment)
    (load "strtab" environment)
    (load "strpad" environment)
    (load "macros" (->environment '(EDWIN MACROS)))
    (load "class" environment)
    (load "clscon" (->environment '(EDWIN CLASS-CONSTRUCTOR)))
    (load "clsmac" (->environment '(EDWIN CLASS-MACROS)))
    (load "xform"
	  (->environment '(EDWIN CLASS-MACROS TRANSFORM-INSTANCE-VARIABLES)))
    (load "paths" environment)
    (load "struct" environment)
    (load "grpops" (->environment '(EDWIN GROUP-OPERATIONS)))
    (load "regops" environment)
    (load "motion" environment)
    (load "search" environment)
    (load "image" environment)
    (load "comman" environment)
    (load "comtab" (->environment '(EDWIN COMTAB)))
    (load "modes" environment)
    (load "buffer" environment)
    (load "bufset" environment)
    (load "undo" (->environment '(EDWIN UNDO)))
    (load "display" (->environment '(EDWIN DISPLAY-TYPE)))
    (load "screen" (->environment '(EDWIN SCREEN)))
    (load "winren" (->environment '(EDWIN)))
    (let ((environment (->environment '(EDWIN WINDOW))))
      (load "window" environment)
      (load "utlwin" environment)
      (load "bufwin" environment)
      (load "bufwfs" environment)
      (load "bufwiu" environment)
      (load "bufwmc" environment)
      (load "comwin" (->environment '(EDWIN WINDOW COMBINATION)))
      (load "modwin" environment)
      (load "buffrm" environment)
      (load "edtfrm" environment))
    (let ((env (->environment '(EDWIN X-SCREEN))))
      (load "xterm" env)
      ((access initialize-package! env)))
    (let ((env (->environment '(EDWIN KEYS))))
      (load "key" env)
      ((access initialize-package! env)))
    (let ((env (->environment '(EDWIN CONSOLE-SCREEN))))
      (load "termcap" env)
      (load "tterm" env)
      ((access initialize-package! env)))    
    (load "edtstr" environment)
    (load "editor" environment)
    (load "curren" environment)
    (load "simple" environment)
    (load "debuge" environment)
    (load "calias" environment)
    (load "modlin" (->environment '(EDWIN MODELINE-STRING)))
    (load "input" (->environment '(EDWIN KEYBOARD)))
    (load "prompt" (->environment '(EDWIN PROMPT)))
    (load "comred" (->environment '(EDWIN COMMAND-READER)))
    (load "bufinp" (->environment '(EDWIN BUFFER-INPUT-PORT)))
    (load "bufout" (->environment '(EDWIN BUFFER-OUTPUT-PORT)))
    (load "winout" (->environment '(EDWIN WINDOW-OUTPUT-PORT)))
    (load "things" environment)
    (load "tparse" environment)
    (load "syntax" environment)
    (load "regexp" (->environment '(EDWIN REGULAR-EXPRESSION)))
    (load "rgxcmp" (->environment '(EDWIN REGULAR-EXPRESSION-COMPILER)))
    (load "linden" (->environment '(EDWIN LISP-INDENTATION)))
    (load "unix" environment)
    (load "fileio" environment)
    (load-option 'SUBPROCESS)
    (load "process" (->environment '(EDWIN PROCESS)))
    (load "argred" (->environment '(EDWIN COMMAND-ARGUMENT)))
    (load "autold" environment)
    (load "autosv" environment)
    (load "basic" environment)
    (load "bufcom" environment)
    (load "bufmnu" (->environment '(EDWIN BUFFER-MENU)))
    (load "c-mode" environment)
    (load "cinden" (->environment '(EDWIN C-INDENTATION)))
    (load "comint" environment)
    (load "debug" (->environment '(EDWIN DEBUGGER)))
    (load "dired" (->environment '(EDWIN DIRED)))
    (load "evlcom" environment)
    (load "filcom" environment)
    (load "fill" environment)
    (load "hlpcom" environment)
    (load "info" (->environment '(EDWIN INFO)))
    (load "intmod" (->environment '(EDWIN INFERIOR-REPL)))
    (load "keymap" (->environment '(EDWIN COMMAND-SUMMARY)))
    (load "kilcom" environment)
    (load "kmacro" environment)
    (load "lincom" environment)
    (load "lspcom" environment)
    (load "malias" (->environment '(EDWIN MAIL-ALIAS)))
    (load "motcom" environment)
    (load "rcs" (->environment '(EDWIN RCS)))
    (load "reccom" (->environment '(EDWIN RECTANGLE)))
    (load "regcom" (->environment '(EDWIN REGISTER-COMMAND)))
    (load "replaz" environment)
    (load "rmail" (->environment '(EDWIN RMAIL)))
    (load "rmailsrt" (->environment '(EDWIN RMAIL)))
    (load "schmod" environment)
    (load "sendmail" (->environment '(EDWIN SENDMAIL)))
    (load "sercom" environment)
    (load "iserch" (->environment '(EDWIN INCREMENTAL-SEARCH)))
    (load "shell" environment)
    (load "tags" (->environment '(EDWIN TAGS)))
    (load "texcom" environment)
    (load "wincom" environment)
    (load "scrcom" environment)
    (load "xcom" (->environment '(EDWIN X-COMMANDS)))
    (load "modefs" environment)
    (load "rename" environment)
    (load "loadef" environment)
    (let ((env (->environment '(EDWIN BOCSHER))))
      (load "bochser" env)
      (load "bochsmod" env)
      ((access initialize-bochser-mode! env)))    
    ))

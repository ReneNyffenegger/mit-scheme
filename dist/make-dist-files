#!/bin/sh

# $Id: 17d6b3b3bf99a480b9fa935baa599e457a4c1de3 $
#
# Copyright 2000,2001,2002,2003,2005 Massachusetts Institute of Technology
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA.

set -e

if [ $# -gt 3 ]; then
    echo "usage: ${0} [TYPE [VERSION [DESTINATION]]]"
    exit 1
fi

TYPE=${1:-std}
VERSION=${2}
DESTINATION=${3}

case "${TYPE}" in
(std)
    ;;
(snapshot)
    [ "${VERSION}" ] || VERSION=snapshot
    ;;
(*)
    echo "Unknown distribution type: ${TYPE}"
    echo "Valid types: std snapshot"
    exit 1
    ;;
esac

if [ "${VERSION}" = snapshot ]; then
    VERSION=$(date +%Y%m%d)
fi

DIST_DIR=/scheme/v7/dist

. "${DIST_DIR}"/release-prefix

TL_DIR=$(pwd)
BUILD_DIR_REL=$(get_release_prefix "${VERSION}")
BUILD_DIR=${TL_DIR}/${BUILD_DIR_REL}
SRC_FILE=${BUILD_DIR}.tar.gz
STAMP_BUILD=${TL_DIR}/stamp-build
STAMP_IMAGE=${TL_DIR}/stamp-image

IMAGE_DIR=${BUILD_DIR}-image
BINDIR=${IMAGE_DIR}/usr/local/bin
AUXDIR=${IMAGE_DIR}/usr/local/lib/mit-scheme

if [ ! -f "${SRC_FILE}" ]; then
    echo "No source file: ${SRC_FILE}."
    exit 1
fi

MKDIR="install -d -m 755"
INSTALL=install
FOO=$(${INSTALL} --help 2> /dev/null | fgrep -e --preserve-timestamps)
[ -n "${FOO}" ] && INSTALL="${INSTALL} --preserve-timestamps"
INSTALL_DATA="${INSTALL} -m 644"

# It takes a lot of work to build the image.
# Don't throw it away needlessly.

if [ ! -f "${STAMP_BUILD}" ];then
    rm -rf "${BUILD_DIR}"

    tar xzf "${SRC_FILE}"

    cd "${BUILD_DIR}"/src
    ./configure --enable-static-libs=yes --enable-dynamic-modules=no \
	--with-mcrypt=no --with-libpq=no --with-db-4=no
    make

    cd "${BUILD_DIR}"/doc
    ./configure
    make

    touch "${STAMP_BUILD}"
fi

if [ ! -f "${STAMP_IMAGE}" ]; then
    rm -rf "${IMAGE_DIR}"

    cd "${BUILD_DIR}"/src
    make install DESTDIR="${IMAGE_DIR}"
    ${MKDIR} "${AUXDIR}"/doc
    ${INSTALL_DATA} COPYING "${AUXDIR}"/doc/.

    cd "${BUILD_DIR}"/doc
    make install-info-gz DESTDIR="${IMAGE_DIR}" \
	infodir=/usr/local/lib/mit-scheme/edwin/info
    make install-html DESTDIR="${IMAGE_DIR}"

    find "${IMAGE_DIR}" -type f -print | xargs chmod og-w
    find "${IMAGE_DIR}" -type d -print | xargs chmod og-w

    touch "${STAMP_IMAGE}"
fi

make_tarfile ()
{
    TARFILE=${TL_DIR}/${1}.tar.gz
    [ -e "${TARFILE}" ] && rm -f "${TARFILE}"
    (cd "${IMAGE_DIR}"/usr/local; tar cvzf "${TARFILE}" *)
    chmod 444 "${TARFILE}"
}

if [ "${DESTINATION}" = "" ]; then
    PRE=${BUILD_DIR_REL}-ix86
    make_tarfile "${PRE}"-gnu-linux
    if [ -f "${DIST_DIR}"/freebsd-bin/scheme ]; then
	${INSTALL} "${DIST_DIR}"/freebsd-bin/* "${BINDIR}"/.
	make_tarfile "${PRE}"-freebsd
    fi
else
    make_tarfile "${DESTINATION}"
fi

rm -rf "${STAMP_IMAGE}" "${IMAGE_DIR}"

case "${TYPE}" in
(std)
    make_doc_file ()
    {
	DOCFILE=${BUILD_DIR}-${2}.${3}
	rm -f "${DOCFILE}"
	(cd "${TL_DIR}"; ${1} "${DOCFILE}" "${BUILD_DIR_REL}"/"${2}")
	chmod a-w "${DOCFILE}"
    }

    for FMT in html info pdf ps; do
	IMAGE_ROOT=doc-${FMT}
	IMAGE_DIR=${BUILD_DIR}/${IMAGE_ROOT}
	rm -rf "${IMAGE_DIR}"
	mkdir "${IMAGE_DIR}"
	(
	    cd "${BUILD_DIR}"/doc
	    make install-"${FMT}" "${FMT}"dir="${IMAGE_DIR}"
	)
	make_doc_file "tar cvzf" "${IMAGE_ROOT}" "tar.gz"
	make_doc_file "zip -r" "${IMAGE_ROOT}" "zip"
	case "${FMT}" in
	(html | pdf)
	    rm -rf "${TL_DIR}"/"${IMAGE_ROOT}"
	    mv -f "${IMAGE_DIR}" "${TL_DIR}"/.
	    ;;
	esac
    done
    ;;
esac

cd "${TL_DIR}"
rm -rf "${STAMP_BUILD}" "${BUILD_DIR}"
